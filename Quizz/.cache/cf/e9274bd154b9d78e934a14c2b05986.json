{"id":"node_modules/one-by-one/lib/index.js","dependencies":[{"name":"C:\\Users\\KERHERVE\\Desktop\\developpement\\QUIZ\\Bigard\\Quizz\\package.json","includedInParent":true,"mtime":1612786337330},{"name":"C:\\Users\\KERHERVE\\Desktop\\developpement\\QUIZ\\Bigard\\Quizz\\node_modules\\one-by-one\\package.json","includedInParent":true,"mtime":1612521959327},{"name":"obj-def","loc":{"line":3,"column":21},"parent":"C:\\Users\\KERHERVE\\Desktop\\developpement\\QUIZ\\Bigard\\Quizz\\node_modules\\one-by-one\\lib\\index.js","resolved":"C:\\Users\\KERHERVE\\Desktop\\developpement\\QUIZ\\Bigard\\Quizz\\node_modules\\obj-def\\lib\\index.js"},{"name":"sliced","loc":{"line":4,"column":21},"parent":"C:\\Users\\KERHERVE\\Desktop\\developpement\\QUIZ\\Bigard\\Quizz\\node_modules\\one-by-one\\lib\\index.js","resolved":"C:\\Users\\KERHERVE\\Desktop\\developpement\\QUIZ\\Bigard\\Quizz\\node_modules\\sliced\\index.js"}],"generated":{"js":"\"use strict\";\n\nvar objDef = require(\"obj-def\"),\n    sliced = require(\"sliced\");\n\n/**\n * oneByOne\n * Calls functions one by one and memorizes the results.\n *\n * @name oneByOne\n * @function\n * @param {Array} arr An array of functions getting the callback parameter in\n * the first argument and response arguments from the previous function call.\n * @param {Function} cb The callback function called with an error (or `null`)\n * and the results array.\n * @return {oneByOne} The `oneByOne` function.\n */\nmodule.exports = function oneByOne(arr, cb) {\n\n    var self = this,\n        result = [null],\n        lastRes = [];\n\n    // This is called when everything is done\n    var done = function done() {\n        // result: [null|Error, [data1, data2], ...args]\n        cb && cb.apply(self, result.concat(lastRes));\n    };\n\n    // This make sure that the functions are executed one by one\n    var doSeq = function doSeq(i) {\n\n        // We are done\n        if (i === arr.length) {\n            return done();\n        }\n\n        var cFunc = arr[i];\n        if (typeof cFunc !== \"function\") {\n            return doSeq(++i);\n        }\n\n        // Call the current function\n        cFunc.apply(self, [function () {\n\n            var args = sliced(arguments);\n\n            // Prepare the result data\n            for (var ii = 1; ii < args.length; ++ii) {\n                var cRes = objDef(result, ii, []);\n                cRes[i] = args[ii];\n            }\n\n            // We found an error\n            if (args[0]) {\n                result[0] = args[0];\n                return done();\n            }\n\n            lastRes = sliced(args, 1);\n\n            doSeq(++i);\n        }].concat(lastRes));\n    };\n\n    doSeq(0);\n};"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/one-by-one/lib/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/one-by-one/lib/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}}],"sources":{"node_modules/one-by-one/lib/index.js":"\"use strict\";\n\nvar objDef = require(\"obj-def\"),\n    sliced = require(\"sliced\");\n\n/**\n * oneByOne\n * Calls functions one by one and memorizes the results.\n *\n * @name oneByOne\n * @function\n * @param {Array} arr An array of functions getting the callback parameter in\n * the first argument and response arguments from the previous function call.\n * @param {Function} cb The callback function called with an error (or `null`)\n * and the results array.\n * @return {oneByOne} The `oneByOne` function.\n */\nmodule.exports = function oneByOne(arr, cb) {\n\n    var self = this,\n        result = [null],\n        lastRes = [];\n\n    // This is called when everything is done\n    var done = function done() {\n        // result: [null|Error, [data1, data2], ...args]\n        cb && cb.apply(self, result.concat(lastRes));\n    };\n\n    // This make sure that the functions are executed one by one\n    var doSeq = function doSeq(i) {\n\n        // We are done\n        if (i === arr.length) {\n            return done();\n        }\n\n        var cFunc = arr[i];\n        if (typeof cFunc !== \"function\") {\n            return doSeq(++i);\n        }\n\n        // Call the current function\n        cFunc.apply(self, [function () {\n\n            var args = sliced(arguments);\n\n            // Prepare the result data\n            for (var ii = 1; ii < args.length; ++ii) {\n                var cRes = objDef(result, ii, []);\n                cRes[i] = args[ii];\n            }\n\n            // We found an error\n            if (args[0]) {\n                result[0] = args[0];\n                return done();\n            }\n\n            lastRes = sliced(args, 1);\n\n            doSeq(++i);\n        }].concat(lastRes));\n    };\n\n    doSeq(0);\n};"},"lineCount":67}},"error":null,"hash":"bae2b8ab93c3ef870e7c3c1b1b295830","cacheData":{"env":{}}}