{"id":"node_modules/parse-url/lib/index.js","dependencies":[{"name":"C:\\Users\\KERHERVE\\Desktop\\developpement\\QUIZ\\Bigard\\Quizz\\package.json","includedInParent":true,"mtime":1612786337330},{"name":"C:\\Users\\KERHERVE\\Desktop\\developpement\\QUIZ\\Bigard\\Quizz\\node_modules\\parse-url\\package.json","includedInParent":true,"mtime":1612521959006},{"name":"protocols","loc":{"line":4,"column":24},"parent":"C:\\Users\\KERHERVE\\Desktop\\developpement\\QUIZ\\Bigard\\Quizz\\node_modules\\parse-url\\lib\\index.js","resolved":"C:\\Users\\KERHERVE\\Desktop\\developpement\\QUIZ\\Bigard\\Quizz\\node_modules\\protocols\\lib\\index.js"},{"name":"is-ssh","loc":{"line":5,"column":20},"parent":"C:\\Users\\KERHERVE\\Desktop\\developpement\\QUIZ\\Bigard\\Quizz\\node_modules\\parse-url\\lib\\index.js","resolved":"C:\\Users\\KERHERVE\\Desktop\\developpement\\QUIZ\\Bigard\\Quizz\\node_modules\\is-ssh\\lib\\index.js"}],"generated":{"js":"\"use strict\";\n\n// Dependencies\nvar protocols = require(\"protocols\"),\n    isSsh = require(\"is-ssh\");\n\n/**\n * parseUrl\n * Parses the input url.\n *\n * @name parseUrl\n * @function\n * @param {String} url The input url.\n * @return {Object} An object containing the following fields:\n *\n *  - `protocols` (Array): An array with the url protocols (usually it has one element).\n *  - `protocol` (String): The first protocol, `\"ssh\"` (if the url is a ssh url) or `\"file\"`.\n *  - `port` (null|Number): The domain port.\n *  - `resource` (String): The url domain (including subdomains).\n *  - `user` (String): The authentication user (usually for ssh urls).\n *  - `pathname` (String): The url pathname.\n *  - `hash` (String): The url hash.\n *  - `search` (String): The url querystring value.\n *  - `href` (String): The input url.\n */\nfunction parseUrl(url) {\n    var output = {\n        protocols: protocols(url),\n        protocol: null,\n        port: null,\n        resource: \"\",\n        user: \"\",\n        pathname: \"\",\n        hash: \"\",\n        search: \"\",\n        href: url\n    },\n        protocolIndex = url.indexOf(\"://\"),\n        resourceIndex = -1,\n        splits = null,\n        parts = null;\n\n    if (url.startsWith(\".\")) {\n        if (url.startsWith(\"./\")) {\n            url = url.substring(2);\n        }\n        output.pathname = url;\n        output.protocol = \"file\";\n    }\n\n    output.protocol = output.protocol || output.protocols[0] || (isSsh(url) ? \"ssh\" : url.charAt(1) === \"/\" ? (url = url.substring(2)) && \"\" : \"file\");\n\n    if (protocolIndex !== -1) {\n        url = url.substring(protocolIndex + 3);\n    }\n\n    parts = url.split(\"/\");\n    if (output.protocol !== \"file\") {\n        output.resource = parts.shift();\n    }\n\n    // user@domain\n    splits = output.resource.split(\"@\");\n    if (splits.length === 2) {\n        output.user = splits[0];\n        output.resource = splits[1];\n    }\n\n    // domain.com:port\n    splits = output.resource.split(\":\");\n    if (splits.length === 2) {\n        output.resource = splits[0];\n        output.port = parseInt(splits[1]);\n        if (isNaN(output.port)) {\n            output.port = null;\n            parts.unshift(splits[1]);\n        }\n    }\n\n    // Remove empty elements\n    parts = parts.filter(Boolean);\n\n    // Stringify the pathname\n    output.pathname = output.pathname || (output.protocol !== \"file\" || output.href[0] === \"/\" ? \"/\" : \"\") + parts.join(\"/\");\n\n    // #some-hash\n    splits = output.pathname.split(\"#\");\n    if (splits.length === 2) {\n        output.pathname = splits[0];\n        output.hash = splits[1];\n    }\n\n    // ?foo=bar\n    splits = output.pathname.split(\"?\");\n    if (splits.length === 2) {\n        output.pathname = splits[0];\n        output.search = splits[1];\n    }\n\n    return output;\n}\n\nmodule.exports = parseUrl;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/parse-url/lib/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/parse-url/lib/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}}],"sources":{"node_modules/parse-url/lib/index.js":"\"use strict\";\n\n// Dependencies\nvar protocols = require(\"protocols\"),\n    isSsh = require(\"is-ssh\");\n\n/**\n * parseUrl\n * Parses the input url.\n *\n * @name parseUrl\n * @function\n * @param {String} url The input url.\n * @return {Object} An object containing the following fields:\n *\n *  - `protocols` (Array): An array with the url protocols (usually it has one element).\n *  - `protocol` (String): The first protocol, `\"ssh\"` (if the url is a ssh url) or `\"file\"`.\n *  - `port` (null|Number): The domain port.\n *  - `resource` (String): The url domain (including subdomains).\n *  - `user` (String): The authentication user (usually for ssh urls).\n *  - `pathname` (String): The url pathname.\n *  - `hash` (String): The url hash.\n *  - `search` (String): The url querystring value.\n *  - `href` (String): The input url.\n */\nfunction parseUrl(url) {\n    var output = {\n        protocols: protocols(url),\n        protocol: null,\n        port: null,\n        resource: \"\",\n        user: \"\",\n        pathname: \"\",\n        hash: \"\",\n        search: \"\",\n        href: url\n    },\n        protocolIndex = url.indexOf(\"://\"),\n        resourceIndex = -1,\n        splits = null,\n        parts = null;\n\n    if (url.startsWith(\".\")) {\n        if (url.startsWith(\"./\")) {\n            url = url.substring(2);\n        }\n        output.pathname = url;\n        output.protocol = \"file\";\n    }\n\n    output.protocol = output.protocol || output.protocols[0] || (isSsh(url) ? \"ssh\" : url.charAt(1) === \"/\" ? (url = url.substring(2)) && \"\" : \"file\");\n\n    if (protocolIndex !== -1) {\n        url = url.substring(protocolIndex + 3);\n    }\n\n    parts = url.split(\"/\");\n    if (output.protocol !== \"file\") {\n        output.resource = parts.shift();\n    }\n\n    // user@domain\n    splits = output.resource.split(\"@\");\n    if (splits.length === 2) {\n        output.user = splits[0];\n        output.resource = splits[1];\n    }\n\n    // domain.com:port\n    splits = output.resource.split(\":\");\n    if (splits.length === 2) {\n        output.resource = splits[0];\n        output.port = parseInt(splits[1]);\n        if (isNaN(output.port)) {\n            output.port = null;\n            parts.unshift(splits[1]);\n        }\n    }\n\n    // Remove empty elements\n    parts = parts.filter(Boolean);\n\n    // Stringify the pathname\n    output.pathname = output.pathname || (output.protocol !== \"file\" || output.href[0] === \"/\" ? \"/\" : \"\") + parts.join(\"/\");\n\n    // #some-hash\n    splits = output.pathname.split(\"#\");\n    if (splits.length === 2) {\n        output.pathname = splits[0];\n        output.hash = splits[1];\n    }\n\n    // ?foo=bar\n    splits = output.pathname.split(\"?\");\n    if (splits.length === 2) {\n        output.pathname = splits[0];\n        output.search = splits[1];\n    }\n\n    return output;\n}\n\nmodule.exports = parseUrl;"},"lineCount":103}},"error":null,"hash":"9b16453875ed5dffa4e9d11d06770209","cacheData":{"env":{}}}